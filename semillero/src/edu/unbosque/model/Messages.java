package edu.unbosque.model;

// Generated 8/04/2013 03:56:28 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Messages generated by hbm2java
 */
@Entity
@Table(name = "messages", catalog = "semillero")
public class Messages implements java.io.Serializable {

	private Integer idMessage;
	private Semilleros semillerosBySemillerosIdSemilleroTo;
	private Users users;
	private Semilleros semillerosBySemillerosIdSemilleroFrom;
	private String subject;
	private String message;
	private Date deleveryDate;
	private Date readDate;
	private Set<Semilleros> semilleroses = new HashSet<Semilleros>(0);

	public Messages() {
	}

	public Messages(Semilleros semillerosBySemillerosIdSemilleroTo,
			Users users, Semilleros semillerosBySemillerosIdSemilleroFrom,
			String subject, String message, Date deleveryDate, Date readDate) {
		this.semillerosBySemillerosIdSemilleroTo = semillerosBySemillerosIdSemilleroTo;
		this.users = users;
		this.semillerosBySemillerosIdSemilleroFrom = semillerosBySemillerosIdSemilleroFrom;
		this.subject = subject;
		this.message = message;
		this.deleveryDate = deleveryDate;
		this.readDate = readDate;
	}

	public Messages(Semilleros semillerosBySemillerosIdSemilleroTo,
			Users users, Semilleros semillerosBySemillerosIdSemilleroFrom,
			String subject, String message, Date deleveryDate, Date readDate,
			Set<Semilleros> semilleroses) {
		this.semillerosBySemillerosIdSemilleroTo = semillerosBySemillerosIdSemilleroTo;
		this.users = users;
		this.semillerosBySemillerosIdSemilleroFrom = semillerosBySemillerosIdSemilleroFrom;
		this.subject = subject;
		this.message = message;
		this.deleveryDate = deleveryDate;
		this.readDate = readDate;
		this.semilleroses = semilleroses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_message", unique = true, nullable = false)
	public Integer getIdMessage() {
		return this.idMessage;
	}

	public void setIdMessage(Integer idMessage) {
		this.idMessage = idMessage;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Semilleros_id_semillero_to", nullable = false)
	public Semilleros getSemillerosBySemillerosIdSemilleroTo() {
		return this.semillerosBySemillerosIdSemilleroTo;
	}

	public void setSemillerosBySemillerosIdSemilleroTo(
			Semilleros semillerosBySemillerosIdSemilleroTo) {
		this.semillerosBySemillerosIdSemilleroTo = semillerosBySemillerosIdSemilleroTo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Users_id_user_from", nullable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Semilleros_id_semillero_from", nullable = false)
	public Semilleros getSemillerosBySemillerosIdSemilleroFrom() {
		return this.semillerosBySemillerosIdSemilleroFrom;
	}

	public void setSemillerosBySemillerosIdSemilleroFrom(
			Semilleros semillerosBySemillerosIdSemilleroFrom) {
		this.semillerosBySemillerosIdSemilleroFrom = semillerosBySemillerosIdSemilleroFrom;
	}

	@Column(name = "subject", nullable = false, length = 45)
	public String getSubject() {
		return this.subject;
	}

	public void setSubject(String subject) {
		this.subject = subject;
	}

	@Column(name = "message", nullable = false, length = 45)
	public String getMessage() {
		return this.message;
	}

	public void setMessage(String message) {
		this.message = message;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "delevery_date", nullable = false, length = 19)
	public Date getDeleveryDate() {
		return this.deleveryDate;
	}

	public void setDeleveryDate(Date deleveryDate) {
		this.deleveryDate = deleveryDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "read_date", nullable = false, length = 19)
	public Date getReadDate() {
		return this.readDate;
	}

	public void setReadDate(Date readDate) {
		this.readDate = readDate;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "semilleros_has_messages", catalog = "semillero", joinColumns = { @JoinColumn(name = "Messages_id_message", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "Semilleros_id_semillero", nullable = false, updatable = false) })
	public Set<Semilleros> getSemilleroses() {
		return this.semilleroses;
	}

	public void setSemilleroses(Set<Semilleros> semilleroses) {
		this.semilleroses = semilleroses;
	}

}
